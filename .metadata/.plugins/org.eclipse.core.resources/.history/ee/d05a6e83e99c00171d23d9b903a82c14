import java.io.*;
import java.net.*;

public class BlockchainClientRunnable implements Runnable {

    private String reply;
    private String host;
    private int port;
    private String message;

    public BlockchainClientRunnable(int serverNumber, String serverName, int portNumber, String message) {
        this.host = serverName;
        this.port = portNumber;
        this.message = message;
        this.reply = "Server" + serverNumber + ": " + serverName + " " + portNumber + "\n"; // header string
    }

    public void run() {
        Socket csock = null;
        InputStream input = null;
        OutputStream output = null;
        BufferedReader inputReader = null;
        PrintWriter outWriter = null;
        try{
            csock = new Socket();
            csock.connect(new InetSocketAddress(host, port), 2000);
            // csock.setSoTimeout(2000);
            input = csock.getInputStream();
            output = csock.getOutputStream();
            // Thread.sleep(2000);

            inputReader = new BufferedReader(new InputStreamReader(input));
            outWriter = new PrintWriter(output, true);
            String res;
            outWriter.write(message+"\n");
            outWriter.flush();
            csock.setSoTimeout(2000);
            csock.shutdownOutput();
            System.out.print(this.reply);
            while((res=inputReader.readLine())!=null&&inputReader.ready()==true){
                System.out.print(res+"\n");
            }
            System.out.println();
            
            // outWriter.write("cc");
            // outWriter.flush();
            // csock.close();
        }
        catch(IOException e){
            System.out.print(this.reply);
            System.out.print("Server is not available\n\n");
            return;
        }
        finally{
            try{
                if(outWriter != null){
                    outWriter.write("cc");
                    outWriter.flush();
                }
            }
            catch(Exception e){
                System.out.println(e.getMessage());   
            }
        }
    }

    public String getReply() {
        return reply;
    }

    // implement any helper method here if you need any
}